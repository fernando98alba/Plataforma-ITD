<%= turbo_frame_tag "maturity_graph" do %>
  <div class = "row">
    <div class="col-xl-7 col-lg-7 col-md-7 col-sm-12 col-xs-12 "> 
      <div>
        <canvas id="myChart2"></canvas>
      </div>

      <script>
        ctx2 = document.getElementById('myChart2');

        arbitratyLine = {
          id: 'arbitratyLine',
          beforeDraw(chart, args, options){
            const { ctx2, charArea: { top, right, bottom, left, width, height }, scales: {x,y}
          } = chart;
          ctx2.save();
          ctx2.strokeStyle = "green";
          ctx2.strokeRect(x.getPixelForValue(2), top, 0, height);
          ctx2.restore();
        }};

        data = {
              labels: [0, 50],
              datasets: [
              { 
                label: 'Puntaje ITD',
                type: "scatter",
                data: [{
                  y: <%= itdcon.alignment_score %>,
                  x: <%= itdcon.maturity_score %>
                }],
                backgroundColor: "red",
                borderColor:'red'
              },
              {
                label: 'Rezagado',
                data: [0, 0],
                backgroundColor: 'rgba(0, 0, 50, 0.2)',
                borderColor:'rgba(0, 0, 0, 0)',
                borderWidth: 1,
                fill: true
              },
              {
                label: 'Explorador Digital',
                data: [30, 30],
                backgroundColor: 'rgba(0, 0, 50, 0.3)',
                borderColor:'rgba(0, 0, 0, 0)',
                borderWidth: 1,
                fill: true
              },
              {
                label: 'Adoptador Digital',
                data: [25, 25],
                backgroundColor: 'rgba(0, 0, 50, 0.2)',
                borderColor:'rgba(0, 0, 0, 0)',
                borderWidth: 1,
                fill: true
              },
              {
                label: 'LÃ­der Digital',
                data: [20, 20],
                backgroundColor: 'rgba(0, 0, 50, 0.3)',
                borderColor:'rgba(1, 0, 0, 0)',
                borderWidth: 1,
                fill: true
              },
              {
                label: 'Disruptor Digital',
                data: [15, 15],
                backgroundColor: 'rgba(0, 0, 50, 0.3)',
                borderColor:'rgba(1, 0, 0, 0)',
                borderWidth: 1,
                fill: true
              },
              {
                label: 'Disruptor Digital',
                data: [10, 10],
                backgroundColor: 'rgba(0, 0, 50, 0.3)',
                borderColor:'rgba(0, 0, 0, 0)',
                borderWidth: 1,
                fill: true
              }
              ]
            };
            <% if recomendation_mat["maturity_score"] > itdcon.maturity_score.to_i or (recomendation_mat["alignment_score"] < itdcon.alignment_score.to_i and recomendation_mat["alignment_score"] > 0) %>
              data.datasets.splice(1,0,
                { 
                  label: 'Aspiracion',
                  type: "scatter",
                  data: [{
                    y: <%= recomendation_mat["alignment_score"] + 0.00000001 %>,
                    x: <%= recomendation_mat["maturity_score"] + 0.00000001 %>
                  }],
                  backgroundColor: "black",
                  borderColor:'black'
                }
              );
            <%end%>
            // render init block
            myChart = new Chart(
              document.getElementById('myChart2').getContext('2d'),
              {
                type: 'line',
                labels: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
                data,
                options: {
                  indexAxis: 'y',
                  scales: {
                    x: {
                      stacked: true,
                      beginAtZero: true,
                    }
                  },
                  onClick: (e) => {

                    // Substitute the appropriate scale IDs
                    const dataX = myChart.scales.x.getValueForPixel(e.x);
                    const dataY = myChart.scales.y.getValueForPixel(e.y);
                    console.log(dataX);
                    console.log(dataY);
                  
                  }
                },
              }
            );
        </script>
      </div>

      <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-xs-12" style="margin-bottom: 30px">
        <h3>Eres un <b>Adoptador Digital</b></h3>
        <p> Madurez </p>
        <%if recomendation_mat["maturity_score"].to_i > itdcon.maturity_score.to_i or (recomendation_mat["alignment_score"].to_i < itdcon.alignment_score.to_i and recomendation_mat["alignment_score"] > 0) %>
          <%= recomendation_mat["maturity_score"].to_i %>
        <%else%>
          <%= "--"%>
        <%end%>
      </div>
    </div>
<% end %>